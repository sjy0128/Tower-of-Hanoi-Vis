import { c as create_ssr_component, o as onDestroy, d as each, e as escape, f as add_attribute, v as validate_component } from "../../chunks/ssr.js";
const css = {
  code: ':root{--primary-color:#4CAF50;--secondary-color:#2196F3;--accent-color:#FF9800;--background-color:#f9f9f9;--text-color:#333;--border-color:#ddd;--rod-color:#555;--rod-base-color:#777;--disk-hue-start:0;--disk-hue-end:300}.svelte-t0k6yl.svelte-t0k6yl{box-sizing:border-box}main.svelte-t0k6yl.svelte-t0k6yl{padding:1rem;max-width:1200px;margin:0 auto;font-family:Arial, sans-serif}h1.svelte-t0k6yl.svelte-t0k6yl{text-align:center;color:var(--primary-color);margin-top:0;font-size:2.5rem;text-shadow:1px 1px 2px rgba(0,0,0,0.1)}.tower-of-hanoi-container.svelte-t0k6yl.svelte-t0k6yl{padding:1rem;min-height:100vh}.layout-container.svelte-t0k6yl.svelte-t0k6yl{display:flex;flex-direction:column;gap:1rem}.visualization-area.svelte-t0k6yl.svelte-t0k6yl{display:flex;justify-content:space-around;align-items:flex-end;height:60vh;width:100%;padding:2rem 0;border:2px solid var(--border-color);border-radius:8px;background:linear-gradient(to bottom, #e0f7fa, #ffffff);box-shadow:0 4px 8px rgba(0,0,0,0.1)}.controls-and-stats.svelte-t0k6yl.svelte-t0k6yl{width:100%;display:flex;flex-direction:column;gap:1rem}.controls.svelte-t0k6yl.svelte-t0k6yl{display:flex;flex-direction:column;gap:1rem;padding:1.5rem;background-color:#fff;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.1)}.stats.svelte-t0k6yl.svelte-t0k6yl{display:grid;grid-template-columns:repeat(auto-fit, minmax(150px, 1fr));gap:1rem;padding:1.5rem;background-color:#e8f4fd;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.1)}.rod.svelte-t0k6yl.svelte-t0k6yl{display:flex;flex-direction:column;align-items:center;position:relative;height:100%;width:150px}.rod-pole.svelte-t0k6yl.svelte-t0k6yl{width:12px;height:80%;background-color:var(--rod-color);border-radius:6px;box-shadow:0 2px 4px rgba(0,0,0,0.2)}.rod-base.svelte-t0k6yl.svelte-t0k6yl{width:160px;height:20px;background-color:var(--rod-base-color);border-radius:4px;margin-top:5px;box-shadow:0 2px 4px rgba(0,0,0,0.2)}.disks-container.svelte-t0k6yl.svelte-t0k6yl{position:absolute;bottom:28px;width:100%;display:flex;flex-direction:column-reverse;align-items:center}.disk.svelte-t0k6yl.svelte-t0k6yl{height:25px;border-radius:4px;display:flex;align-items:center;justify-content:center;margin-bottom:1px;box-shadow:0 2px 6px rgba(0,0,0,0.3);transition:transform 0.3s ease, left 0.3s ease;position:relative;z-index:1;min-width:35px}.disk-label.svelte-t0k6yl.svelte-t0k6yl{color:white;font-weight:bold;font-size:0.8rem;text-shadow:1px 1px 1px rgba(0,0,0,0.5)}.controls.svelte-t0k6yl.svelte-t0k6yl{display:flex;flex-wrap:wrap;gap:1.5rem;justify-content:center;align-items:center;padding:1.5rem;background-color:#fff;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.1)}.control-group.svelte-t0k6yl.svelte-t0k6yl{display:flex;flex-direction:column;align-items:center;gap:0.5rem;min-width:150px}.control-group.svelte-t0k6yl label.svelte-t0k6yl{font-weight:bold;color:var(--text-color)}.control-group.svelte-t0k6yl input[type="range"].svelte-t0k6yl{width:150px}.control-group.svelte-t0k6yl select.svelte-t0k6yl{padding:0.5rem;border-radius:4px;border:1px solid var(--border-color);background-color:white;min-width:100px}.buttons.svelte-t0k6yl.svelte-t0k6yl{display:flex;flex-direction:row;flex-wrap:nowrap;gap:0.5rem;justify-content:center;width:100%}.btn.svelte-t0k6yl.svelte-t0k6yl{padding:0.7rem 1.2rem;border:none;border-radius:4px;cursor:pointer;background-color:var(--primary-color);color:white;font-weight:bold;transition:all 0.3s;min-width:90px}.btn-control.svelte-t0k6yl.svelte-t0k6yl{flex:1}.btn.svelte-t0k6yl.svelte-t0k6yl:hover:not(.disabled){background-color:#45a049;transform:translateY(-2px);box-shadow:0 4px 8px rgba(0,0,0,0.2)}.btn.svelte-t0k6yl.svelte-t0k6yl:active:not(.disabled){transform:translateY(0)}.btn.playing.svelte-t0k6yl.svelte-t0k6yl{background-color:#f44336}.btn.playing.svelte-t0k6yl.svelte-t0k6yl:hover{background-color:#d32f2f}.btn.disabled.svelte-t0k6yl.svelte-t0k6yl{background-color:#cccccc;cursor:not-allowed;opacity:0.6}.stats.svelte-t0k6yl.svelte-t0k6yl{display:grid;grid-template-columns:repeat(auto-fit, minmax(150px, 1fr));gap:1rem;padding:1.5rem;background-color:#e8f4fd;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.1)}.stat-item.svelte-t0k6yl.svelte-t0k6yl{text-align:center;padding:0.5rem}.stat-item.svelte-t0k6yl h3.svelte-t0k6yl{margin:0 0 0.5rem 0;color:var(--text-color);font-size:1rem;font-weight:600}.stat-item.svelte-t0k6yl p.svelte-t0k6yl{margin:0.25rem 0;font-weight:bold;color:#2c3e50}.progress-bar.svelte-t0k6yl.svelte-t0k6yl{width:100%;height:20px;background-color:#ddd;border-radius:10px;overflow:hidden;margin:0.5rem 0}.progress.svelte-t0k6yl.svelte-t0k6yl{height:100%;background:linear-gradient(to right, var(--primary-color), var(--secondary-color));transition:width 0.3s ease}@media(min-width: 1024px){.layout-container.svelte-t0k6yl.svelte-t0k6yl{flex-direction:row;height:80vh}.visualization-area.svelte-t0k6yl.svelte-t0k6yl{width:60%;height:100%;border-right:2px solid var(--border-color);border-bottom:none;border-radius:8px 0 0 8px}.controls-and-stats.svelte-t0k6yl.svelte-t0k6yl{width:40%;height:100%;display:flex;flex-direction:column;justify-content:space-between}.controls.svelte-t0k6yl.svelte-t0k6yl{width:100%;height:auto;border-radius:0 8px 0 0}.stats.svelte-t0k6yl.svelte-t0k6yl{width:100%;height:auto;border-radius:0 0 8px 0;margin-top:auto}}@media(max-width: 1023px){.tower-of-hanoi-container.svelte-t0k6yl.svelte-t0k6yl{padding:0.5rem}h1.svelte-t0k6yl.svelte-t0k6yl{font-size:1.8rem}.visualization-area.svelte-t0k6yl.svelte-t0k6yl{height:50vh;padding:1rem 0}.rod.svelte-t0k6yl.svelte-t0k6yl{width:100px}.rod-pole.svelte-t0k6yl.svelte-t0k6yl{width:8px}.rod-base.svelte-t0k6yl.svelte-t0k6yl{width:110px}.controls.svelte-t0k6yl.svelte-t0k6yl{flex-direction:column;gap:1rem;padding:1rem}.buttons.svelte-t0k6yl.svelte-t0k6yl{gap:0.5rem}.btn.svelte-t0k6yl.svelte-t0k6yl{min-width:80px;padding:0.6rem;font-size:0.9rem}.stats.svelte-t0k6yl.svelte-t0k6yl{grid-template-columns:1fr}}@media(max-width: 480px){h1.svelte-t0k6yl.svelte-t0k6yl{font-size:1.5rem}.visualization-area.svelte-t0k6yl.svelte-t0k6yl{height:40vh}.disk.svelte-t0k6yl.svelte-t0k6yl{height:20px}.disk-label.svelte-t0k6yl.svelte-t0k6yl{font-size:0.7rem}.rod.svelte-t0k6yl.svelte-t0k6yl{width:80px}.rod-pole.svelte-t0k6yl.svelte-t0k6yl{width:6px}.rod-base.svelte-t0k6yl.svelte-t0k6yl{width:90px}.control-group.svelte-t0k6yl.svelte-t0k6yl{width:100%}.control-group.svelte-t0k6yl input[type="range"].svelte-t0k6yl{width:100%}}',
  map: '{"version":3,"file":"App.svelte","sources":["App.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount, onDestroy } from \\"svelte\\";\\nlet disks = 3;\\nlet rods = [[], [], []];\\nlet moves = [];\\nlet currentMoveIndex = 0;\\nlet isPlaying = false;\\nlet speed = 1e3;\\nlet totalMoves = 0;\\nlet intervalId = null;\\nlet startTime = null;\\nconst initializeGame = (numDisks) => {\\n  disks = numDisks;\\n  rods = [Array.from({ length: numDisks }, (_, i) => ({ id: i, size: numDisks - i })), [], []];\\n  moves = calculateMoves(numDisks, 0, 2, 1);\\n  totalMoves = moves.length;\\n  currentMoveIndex = 0;\\n};\\nconst calculateMoves = (n, source, target, auxiliary) => {\\n  if (n === 1) {\\n    return [{ from: source, to: target }];\\n  }\\n  const moves2 = [];\\n  moves2.push(...calculateMoves(n - 1, source, auxiliary, target));\\n  moves2.push({ from: source, to: target });\\n  moves2.push(...calculateMoves(n - 1, auxiliary, target, source));\\n  return moves2;\\n};\\nconst executeMove = () => {\\n  if (currentMoveIndex >= moves.length) {\\n    isPlaying = false;\\n    if (intervalId) {\\n      clearInterval(intervalId);\\n      intervalId = null;\\n    }\\n    return;\\n  }\\n  const move = moves[currentMoveIndex];\\n  const disk = rods[move.from].pop();\\n  if (disk) {\\n    rods[move.to] = [...rods[move.to], disk];\\n  }\\n  currentMoveIndex++;\\n};\\nconst startAnimation = () => {\\n  if (moves.length > 0 && currentMoveIndex < moves.length && !isPlaying) {\\n    isPlaying = true;\\n    if (!startTime) {\\n      startTime = Date.now();\\n    }\\n    intervalId = window.setInterval(() => {\\n      executeMove();\\n      if (currentMoveIndex >= moves.length) {\\n        stopAnimation();\\n      }\\n    }, speed);\\n  }\\n};\\nconst stopAnimation = () => {\\n  isPlaying = false;\\n  if (intervalId) {\\n    clearInterval(intervalId);\\n    intervalId = null;\\n  }\\n};\\nconst resetGame = () => {\\n  stopAnimation();\\n  startTime = null;\\n  initializeGame(disks);\\n};\\nconst stepForward = () => {\\n  if (currentMoveIndex < moves.length) {\\n    executeMove();\\n  }\\n};\\nconst stepBackward = () => {\\n  if (currentMoveIndex > 0) {\\n    currentMoveIndex--;\\n    const move = moves[currentMoveIndex];\\n    const disk = rods[move.to].pop();\\n    if (disk) {\\n      rods[move.from] = [...rods[move.from], disk];\\n    }\\n  }\\n};\\nconst updateSpeed = (newSpeed) => {\\n  speed = newSpeed;\\n  if (isPlaying) {\\n    stopAnimation();\\n    startAnimation();\\n  }\\n};\\nconst updateDisks = (newDisks) => {\\n  initializeGame(newDisks);\\n};\\nonMount(() => {\\n  initializeGame(disks);\\n});\\nonDestroy(() => {\\n  if (intervalId) {\\n    clearInterval(intervalId);\\n  }\\n});\\nconst speedOptions = [\\n  { label: \\"Slow\\", value: 2e3 },\\n  { label: \\"Medium\\", value: 1e3 },\\n  { label: \\"Fast\\", value: 500 },\\n  { label: \\"Very Fast\\", value: 200 }\\n];\\n$: complexity = `O(2^${disks}) = O(${Math.pow(2, disks)})`;\\n$: progress = totalMoves > 0 ? Math.round(currentMoveIndex / totalMoves * 100) : 0;\\n$: formattedTime = startTime ? new Date(Math.floor((Date.now() - startTime) / 1e3) * 1e3).toISOString().substr(14, 5) : \\"00:00\\";\\nconst getColor = (size, total) => {\\n  const hue = size * 360 / total;\\n  return `hsl(${hue}, 80%, 50%)`;\\n};\\nconst getPosition = (index) => {\\n  const positions = [\\"left\\", \\"center\\", \\"right\\"];\\n  return positions[index] || \\"center\\";\\n};\\nfunction handleSpeedChange(e) {\\n  const target = e.target;\\n  updateSpeed(parseInt(target.value));\\n}\\n<\/script>\\n\\n<main>\\n  <h1>Tower of Hanoi Visualization</h1>\\n  \\n  <div class=\\"tower-of-hanoi-container\\">\\n    <div class=\\"layout-container\\">\\n      <div class=\\"visualization-area\\">\\n        {#each [0, 1, 2] as rodIndex}\\n          <div class=\\"rod\\" class:position={getPosition(rodIndex)}>\\n            <div class=\\"rod-pole\\"></div>\\n            <div class=\\"rod-base\\"></div>\\n            <div class=\\"disks-container\\">\\n              {#each rods[rodIndex] as disk, diskIndex}\\n                <div \\n                  class=\\"disk\\"\\n                  style={`background-color: ${getColor(disk.size, disks)}; width: ${40 + (disk.size - 1) * 12}px;`}\\n                >\\n                  <span class=\\"disk-label\\">{disk.size}</span>\\n                </div>\\n              {/each}\\n            </div>\\n          </div>\\n        {/each}\\n      </div>\\n      \\n      <div class=\\"controls-and-stats\\">\\n        <div class=\\"controls\\">\\n          <div class=\\"control-group\\">\\n            <label for=\\"disk-count\\">Number of Disks: {disks}</label>\\n            <input \\n              id=\\"disk-count\\"\\n              type=\\"range\\" \\n              min=\\"3\\" \\n              max=\\"10\\" \\n              bind:value={disks}\\n              on:change={() => initializeGame(disks)}\\n            />\\n          </div>\\n          \\n          <div class=\\"control-group\\">\\n            <label for=\\"speed\\">Speed:</label>\\n            <select id=\\"speed\\" on:change={handleSpeedChange}>\\n              {#each speedOptions as option}\\n                <option value={option.value} selected={option.value === speed}>\\n                  {option.label}\\n                </option>\\n              {/each}\\n            </select>\\n          </div>\\n          \\n          <div class=\\"control-group buttons\\">\\n            <button \\n              class=\\"btn btn-control\\" \\n              class:playing={isPlaying}\\n              on:click={isPlaying ? stopAnimation : startAnimation}\\n            >\\n              {isPlaying ? \'Pause\' : \'Play\'}\\n            </button>\\n            \\n            <button \\n              class=\\"btn btn-control\\" \\n              class:disabled={currentMoveIndex <= 0}\\n              disabled={currentMoveIndex <= 0}\\n              on:click={stepBackward}\\n            >\\n              ← Step\\n            </button>\\n            \\n            <button \\n              class=\\"btn btn-control\\" \\n              class:disabled={currentMoveIndex >= totalMoves}\\n              disabled={currentMoveIndex >= totalMoves}\\n              on:click={stepForward}\\n            >\\n              Step →\\n            </button>\\n            \\n            <button class=\\"btn btn-control\\" on:click={resetGame}>Reset</button>\\n          </div>\\n        </div>\\n        \\n        <div class=\\"stats\\">\\n          <div class=\\"stat-item\\">\\n            <h3>Current Step</h3>\\n            <p>{currentMoveIndex} / {totalMoves}</p>\\n          </div>\\n          \\n          <div class=\\"stat-item\\">\\n            <h3>Disks</h3>\\n            <p>{disks}</p>\\n          </div>\\n          \\n          <div class=\\"stat-item\\">\\n            <h3>Algorithm Complexity</h3>\\n            <p>{complexity}</p>\\n          </div>\\n          \\n\\n          \\n          <div class=\\"stat-item\\">\\n            <h3>Progress</h3>\\n            <div class=\\"progress-bar\\">\\n              <div class=\\"progress\\" style={`width: ${progress}%`}></div>\\n            </div>\\n            <p>{progress}%</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</main>\\n\\n<style>\\n  :root {\\n    --primary-color: #4CAF50;\\n    --secondary-color: #2196F3;\\n    --accent-color: #FF9800;\\n    --background-color: #f9f9f9;\\n    --text-color: #333;\\n    --border-color: #ddd;\\n    --rod-color: #555;\\n    --rod-base-color: #777;\\n    --disk-hue-start: 0;\\n    --disk-hue-end: 300;\\n  }\\n\\n  * {\\n    box-sizing: border-box;\\n  }\\n\\n  body {\\n    margin: 0;\\n    padding: 0;\\n    font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\\n    background-color: var(--background-color);\\n    color: var(--text-color);\\n    line-height: 1.6;\\n  }\\n\\n  main {\\n    padding: 1rem;\\n    max-width: 1200px;\\n    margin: 0 auto;\\n    font-family: Arial, sans-serif;\\n  }\\n  \\n  h1 {\\n    text-align: center;\\n    color: var(--primary-color);\\n    margin-top: 0;\\n    font-size: 2.5rem;\\n    text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\\n  }\\n\\n  .tower-of-hanoi-container {\\n    padding: 1rem;\\n    min-height: 100vh;\\n  }\\n  \\n  .layout-container {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n  }\\n  \\n  .visualization-area {\\n    display: flex;\\n    justify-content: space-around;\\n    align-items: flex-end;\\n    height: 60vh;\\n    width: 100%;\\n    padding: 2rem 0;\\n    border: 2px solid var(--border-color);\\n    border-radius: 8px;\\n    background: linear-gradient(to bottom, #e0f7fa, #ffffff);\\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\\n  }\\n  \\n  .controls-and-stats {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n  }\\n  \\n  .controls {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n    padding: 1.5rem;\\n    background-color: #fff;\\n    border-radius: 8px;\\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\\n  }\\n  \\n  .stats {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n    gap: 1rem;\\n    padding: 1.5rem;\\n    background-color: #e8f4fd;\\n    border-radius: 8px;\\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\\n  }\\n\\n  /* Rod styling */\\n  .rod {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    position: relative;\\n    height: 100%;\\n    width: 150px;\\n  }\\n\\n  .rod-pole {\\n    width: 12px;\\n    height: 80%;\\n    background-color: var(--rod-color);\\n    border-radius: 6px;\\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\n  }\\n\\n  .rod-base {\\n    width: 160px;\\n    height: 20px;\\n    background-color: var(--rod-base-color);\\n    border-radius: 4px;\\n    margin-top: 5px;\\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\n  }\\n\\n  .disks-container {\\n    position: absolute;\\n    bottom: 28px;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column-reverse;\\n    align-items: center;\\n  }\\n\\n  /* Disk styling */\\n  .disk {\\n    height: 25px;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    margin-bottom: 1px;\\n    box-shadow: 0 2px 6px rgba(0,0,0,0.3);\\n    transition: transform 0.3s ease, left 0.3s ease;\\n    position: relative;\\n    z-index: 1;\\n    min-width: 35px;\\n  }\\n\\n  .disk-label {\\n    color: white;\\n    font-weight: bold;\\n    font-size: 0.8rem;\\n    text-shadow: 1px 1px 1px rgba(0,0,0,0.5);\\n  }\\n\\n  /* Controls styling */\\n  .controls {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 1.5rem;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 1.5rem;\\n    background-color: #fff;\\n    border-radius: 8px;\\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\\n  }\\n\\n  .control-group {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 0.5rem;\\n    min-width: 150px;\\n  }\\n\\n  .control-group label {\\n    font-weight: bold;\\n    color: var(--text-color);\\n  }\\n\\n  .control-group input[type=\\"range\\"] {\\n    width: 150px;\\n  }\\n\\n  .control-group select {\\n    padding: 0.5rem;\\n    border-radius: 4px;\\n    border: 1px solid var(--border-color);\\n    background-color: white;\\n    min-width: 100px;\\n  }\\n\\n  .buttons {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: nowrap;\\n    gap: 0.5rem;\\n    justify-content: center;\\n    width: 100%;\\n  }\\n\\n  .btn {\\n    padding: 0.7rem 1.2rem;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    background-color: var(--primary-color);\\n    color: white;\\n    font-weight: bold;\\n    transition: all 0.3s;\\n    min-width: 90px;\\n  }\\n  \\n  .btn-control {\\n    flex: 1;\\n  }\\n\\n  .btn:hover:not(.disabled) {\\n    background-color: #45a049;\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 8px rgba(0,0,0,0.2);\\n  }\\n\\n  .btn:active:not(.disabled) {\\n    transform: translateY(0);\\n  }\\n\\n  .btn.playing {\\n    background-color: #f44336;\\n  }\\n\\n  .btn.playing:hover {\\n    background-color: #d32f2f;\\n  }\\n\\n  .btn.disabled {\\n    background-color: #cccccc;\\n    cursor: not-allowed;\\n    opacity: 0.6;\\n  }\\n\\n  /* Stats styling */\\n  .stats {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n    gap: 1rem;\\n    padding: 1.5rem;\\n    background-color: #e8f4fd;\\n    border-radius: 8px;\\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\\n  }\\n\\n  .stat-item {\\n    text-align: center;\\n    padding: 0.5rem;\\n  }\\n\\n  .stat-item h3 {\\n    margin: 0 0 0.5rem 0;\\n    color: var(--text-color);\\n    font-size: 1rem;\\n    font-weight: 600;\\n  }\\n\\n  .stat-item p {\\n    margin: 0.25rem 0;\\n    font-weight: bold;\\n    color: #2c3e50;\\n  }\\n\\n  .progress-bar {\\n    width: 100%;\\n    height: 20px;\\n    background-color: #ddd;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    margin: 0.5rem 0;\\n  }\\n\\n  .progress {\\n    height: 100%;\\n    background: linear-gradient(to right, var(--primary-color), var(--secondary-color));\\n    transition: width 0.3s ease;\\n  }\\n\\n  /* Landscape layout - when screen is wide (desktop/laptop) */\\n  @media (min-width: 1024px) {\\n    .layout-container {\\n      flex-direction: row;\\n      height: 80vh;\\n    }\\n    \\n    .visualization-area {\\n      width: 60%;\\n      height: 100%;\\n      border-right: 2px solid var(--border-color);\\n      border-bottom: none;\\n      border-radius: 8px 0 0 8px;\\n    }\\n    \\n    .controls-and-stats {\\n      width: 40%;\\n      height: 100%;\\n      display: flex;\\n      flex-direction: column;\\n      justify-content: space-between;\\n    }\\n    \\n    .controls {\\n      width: 100%;\\n      height: auto;\\n      border-radius: 0 8px 0 0;\\n    }\\n    \\n    .stats {\\n      width: 100%;\\n      height: auto;\\n      border-radius: 0 0 8px 0;\\n      margin-top: auto;\\n    }\\n  }\\n\\n  /* Portrait layout - when screen is narrow (mobile/tablet) */\\n  @media (max-width: 1023px) {\\n    .tower-of-hanoi-container {\\n      padding: 0.5rem;\\n    }\\n    \\n    h1 {\\n      font-size: 1.8rem;\\n    }\\n    \\n    .visualization-area {\\n      height: 50vh;\\n      padding: 1rem 0;\\n    }\\n    \\n    .rod {\\n      width: 100px;\\n    }\\n    \\n    .rod-pole {\\n      width: 8px;\\n    }\\n    \\n    .rod-base {\\n      width: 110px;\\n    }\\n    \\n    .controls {\\n      flex-direction: column;\\n      gap: 1rem;\\n      padding: 1rem;\\n    }\\n    \\n    .buttons {\\n      gap: 0.5rem;\\n    }\\n    \\n    .btn {\\n      min-width: 80px;\\n      padding: 0.6rem;\\n      font-size: 0.9rem;\\n    }\\n    \\n    .stats {\\n      grid-template-columns: 1fr;\\n    }\\n  }\\n\\n  @media (max-width: 480px) {\\n    h1 {\\n      font-size: 1.5rem;\\n    }\\n    \\n    .visualization-area {\\n      height: 40vh;\\n    }\\n    \\n    .disk {\\n      height: 20px;\\n    }\\n    \\n    .disk-label {\\n      font-size: 0.7rem;\\n    }\\n    \\n    .rod {\\n      width: 80px;\\n    }\\n    \\n    .rod-pole {\\n      width: 6px;\\n    }\\n    \\n    .rod-base {\\n      width: 90px;\\n    }\\n    \\n    .control-group {\\n      width: 100%;\\n    }\\n    \\n    .control-group input[type=\\"range\\"] {\\n      width: 100%;\\n    }\\n  }\\n</style>"],"names":[],"mappings":"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"}'
};
const App = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let complexity;
  let progress;
  let disks = 3;
  let rods = [[], [], []];
  let currentMoveIndex = 0;
  let speed = 1e3;
  let totalMoves = 0;
  onDestroy(() => {
  });
  const speedOptions = [
    { label: "Slow", value: 2e3 },
    { label: "Medium", value: 1e3 },
    { label: "Fast", value: 500 },
    { label: "Very Fast", value: 200 }
  ];
  const getColor = (size, total) => {
    const hue = size * 360 / total;
    return `hsl(${hue}, 80%, 50%)`;
  };
  $$result.css.add(css);
  complexity = `O(2^${disks}) = O(${Math.pow(2, disks)})`;
  progress = 0;
  return `<main class="svelte-t0k6yl"><h1 class="svelte-t0k6yl" data-svelte-h="svelte-1ppl0m1">Tower of Hanoi Visualization</h1> <div class="tower-of-hanoi-container svelte-t0k6yl"><div class="layout-container svelte-t0k6yl"><div class="visualization-area svelte-t0k6yl">${each([0, 1, 2], (rodIndex) => {
    return `<div class="${["rod svelte-t0k6yl", "position"].join(" ").trim()}"><div class="rod-pole svelte-t0k6yl"></div> <div class="rod-base svelte-t0k6yl"></div> <div class="disks-container svelte-t0k6yl">${each(rods[rodIndex], (disk, diskIndex) => {
      return `<div class="disk svelte-t0k6yl"${add_attribute("style", `background-color: ${getColor(disk.size, disks)}; width: ${40 + (disk.size - 1) * 12}px;`, 0)}><span class="disk-label svelte-t0k6yl">${escape(disk.size)}</span> </div>`;
    })}</div> </div>`;
  })}</div> <div class="controls-and-stats svelte-t0k6yl"><div class="controls svelte-t0k6yl"><div class="control-group svelte-t0k6yl"><label for="disk-count" class="svelte-t0k6yl">Number of Disks: ${escape(disks)}</label> <input id="disk-count" type="range" min="3" max="10" class="svelte-t0k6yl"${add_attribute("value", disks, 0)}></div> <div class="control-group svelte-t0k6yl"><label for="speed" class="svelte-t0k6yl" data-svelte-h="svelte-1s37fbq">Speed:</label> <select id="speed" class="svelte-t0k6yl">${each(speedOptions, (option) => {
    return `<option${add_attribute("value", option.value, 0)} ${option.value === speed ? "selected" : ""} class="svelte-t0k6yl">${escape(option.label)} </option>`;
  })}</select></div> <div class="control-group buttons svelte-t0k6yl"><button class="${["btn btn-control svelte-t0k6yl", ""].join(" ").trim()}">${escape("Play")}</button> <button class="${["btn btn-control svelte-t0k6yl", "disabled"].join(" ").trim()}" ${"disabled"}>← Step</button> <button class="${[
    "btn btn-control svelte-t0k6yl",
    "disabled"
  ].join(" ").trim()}" ${"disabled"}>Step →</button> <button class="btn btn-control svelte-t0k6yl" data-svelte-h="svelte-knbh0d">Reset</button></div></div> <div class="stats svelte-t0k6yl"><div class="stat-item svelte-t0k6yl"><h3 class="svelte-t0k6yl" data-svelte-h="svelte-t6erbt">Current Step</h3> <p class="svelte-t0k6yl">${escape(currentMoveIndex)} / ${escape(totalMoves)}</p></div> <div class="stat-item svelte-t0k6yl"><h3 class="svelte-t0k6yl" data-svelte-h="svelte-1i8aj4w">Disks</h3> <p class="svelte-t0k6yl">${escape(disks)}</p></div> <div class="stat-item svelte-t0k6yl"><h3 class="svelte-t0k6yl" data-svelte-h="svelte-1y5cxk3">Algorithm Complexity</h3> <p class="svelte-t0k6yl">${escape(complexity)}</p></div> <div class="stat-item svelte-t0k6yl"><h3 class="svelte-t0k6yl" data-svelte-h="svelte-1ukgq2b">Progress</h3> <div class="progress-bar svelte-t0k6yl"><div class="progress svelte-t0k6yl"${add_attribute("style", `width: ${progress}%`, 0)}></div></div> <p class="svelte-t0k6yl">${escape(progress)}%</p></div></div></div></div></div> </main>`;
});
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(App, "App").$$render($$result, {}, {}, {})}`;
});
export {
  Page as default
};
